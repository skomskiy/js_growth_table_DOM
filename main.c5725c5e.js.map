{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","tbody","rows","appendColumn","removeColumn","appendRow","removeRow","addEventListener","e","rowsLenght","children","length","columnLenght","target","tagName","allRows","querySelectorAll","i","insertAdjacentHTML","lastElementChild","remove","append","cloneNode","newRowsLenght","newColumnLenght","disabled","removeAttribute","setAttribute"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAQF,SAASC,cAAc,SAC/BE,EAAOH,SAASC,cAAc,MAC9BG,EAAeJ,SAASC,cAAc,kBACtCI,EAAeL,SAASC,cAAc,kBACtCK,EAAYN,SAASC,cAAc,eACnCM,EAAYP,SAASC,cAAc,eAEzCF,EAAUS,iBAAiB,QAAS,SAACC,GAC7BC,IAAAA,EAAaP,EAAKQ,SAASC,OAC3BC,EAAeX,EAAMS,SAASC,OAEhCH,GAAqB,WAArBA,EAAEK,OAAOC,QAATN,CAIIA,OAAAA,EAAEK,QACHV,KAAAA,EACCM,GAAAA,EAAa,GAGV,IAFCM,IAAAA,EAAUhB,SAASiB,iBAAiB,MAEjCC,EAAI,EAAGA,EAAIF,EAAQJ,OAAQM,IAClCF,EAAQE,GAAGC,mBAAmB,YAAa,aAG/C,MACGd,KAAAA,EACCK,GAAAA,EAAa,EAGV,IAFCM,IAAAA,EAAUhB,SAASiB,iBAAiB,MAEjCC,EAAI,EAAGA,EAAIF,EAAQJ,OAAQM,IAClCF,EAAQE,GAAGE,iBAAiBC,SAGhC,MACGf,KAAAA,EACCO,EAAe,IACjBX,EAAMoB,OAAOpB,EAAMkB,iBAAiBG,WAAU,IAEhD,MACGhB,KAAAA,EACCM,EAAe,GACjBX,EAAMkB,iBAAiBC,SAKvBG,IAAAA,EAAgBrB,EAAKQ,SAASC,OAC9Ba,EAAkBvB,EAAMS,SAASC,OACjCc,EAAW,WAEjBtB,EAAauB,gBAAgBD,GAC7BrB,EAAasB,gBAAgBD,GAC7BpB,EAAUqB,gBAAgBD,GAC1BnB,EAAUoB,gBAAgBD,GAGF,KAAlBF,GACFpB,EAAawB,aAAaF,EAAUA,GAGhB,IAAlBF,GACFnB,EAAauB,aAAaF,EAAUA,GAGd,KAApBD,GACFnB,EAAUsB,aAAaF,EAAUA,GAGX,IAApBD,GACFlB,EAAUqB,aAAaF,EAAUA","file":"main.c5725c5e.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nconst tbody = document.querySelector('tbody');\nconst rows = document.querySelector('tr');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\n\ncontainer.addEventListener('click', (e) => {\n  const rowsLenght = rows.children.length;\n  const columnLenght = tbody.children.length;\n\n  if (e.target.tagName !== 'BUTTON') {\n    return;\n  };\n\n  switch (e.target) {\n    case appendColumn:\n      if (rowsLenght < 10) {\n        const allRows = document.querySelectorAll('tr');\n\n        for (let i = 0; i < allRows.length; i++) {\n          allRows[i].insertAdjacentHTML('beforeend', '<td></td>');\n        }\n      }\n      break;\n    case removeColumn:\n      if (rowsLenght > 2) {\n        const allRows = document.querySelectorAll('tr');\n\n        for (let i = 0; i < allRows.length; i++) {\n          allRows[i].lastElementChild.remove();\n        }\n      }\n      break;\n    case appendRow:\n      if (columnLenght < 10) {\n        tbody.append(tbody.lastElementChild.cloneNode(true));\n      }\n      break;\n    case removeRow:\n      if (columnLenght > 2) {\n        tbody.lastElementChild.remove();\n      }\n      break;\n  };\n\n  const newRowsLenght = rows.children.length;\n  const newColumnLenght = tbody.children.length;\n  const disabled = 'disabled';\n\n  appendColumn.removeAttribute(disabled);\n  removeColumn.removeAttribute(disabled);\n  appendRow.removeAttribute(disabled);\n  removeRow.removeAttribute(disabled);\n\n  function disabledAttribute() {\n    if (newRowsLenght === 10) {\n      appendColumn.setAttribute(disabled, disabled);\n    }\n\n    if (newRowsLenght === 2) {\n      removeColumn.setAttribute(disabled, disabled);\n    }\n\n    if (newColumnLenght === 10) {\n      appendRow.setAttribute(disabled, disabled);\n    }\n\n    if (newColumnLenght === 2) {\n      removeRow.setAttribute(disabled, disabled);\n    }\n  }\n\n  disabledAttribute();\n});\n"]}